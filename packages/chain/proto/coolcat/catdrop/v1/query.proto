syntax = "proto3";
package coolcat.catdrop.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "coolcat/catdrop/v1/claim_record.proto";
import "coolcat/catdrop/v1/hook_record.proto";
import "coolcat/catdrop/v1/params.proto";

option go_package = "github.com/coolcat-network/coolcat/v1/x/catdrop/types";

// Query defines the gRPC querier service.
service Query {
  // Queries the unclaimed amount of CCAT in the catdrop module
  rpc ModuleAccountBalance(QueryModuleAccountBalanceRequest)
      returns (QueryModuleAccountBalanceResponse) {
    option (google.api.http).get = "/coolcat/catdrop/v1/module_account_balance";
  }
  // Queries the params of the catdrop module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/coolcat/catdrop/v1/params";
  }
  // Queries the claim record for a provided address
  rpc ClaimRecord(QueryClaimRecordRequest) returns (QueryClaimRecordResponse) {
    option (google.api.http).get = "/coolcat/catdrop/v1/claim_record/{address}";
  }
  // Queries the claim record for a provided address
  rpc HookRecord(QueryHookRecordRequest) returns (QueryHookRecordResponse) {
    option (google.api.http).get = "/coolcat/catdrop/v1/hook_record/{address}";
  }
  // Queries the reward for a single provided action for a provided address
  rpc ClaimableForAction(QueryClaimableForActionRequest)
      returns (QueryClaimableForActionResponse) {
    option (google.api.http).get =
        "/coolcat/catdrop/v1/claimable_for_action/{address}/{action}";
  }
  // Queries the total reward for a provided address
  rpc TotalClaimable(QueryTotalClaimableRequest)
      returns (QueryTotalClaimableResponse) {
    option (google.api.http).get =
        "/coolcat/catdrop/v1/total_claimable/{address}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryModuleAccountBalanceRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryModuleAccountBalanceResponse {
  // params defines the parameters of the module.
  repeated cosmos.base.v1beta1.Coin module_account_balance = 1 [
    (gogoproto.moretags) = "yaml:\"coins\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryClaimRecordRequest is the request type for the Query/ClaimRecord RPC
// method.
message QueryClaimRecordRequest {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
}

// QueryClaimRecordResponse is the response type for the Query/ClaimRecord RPC
// method.
message QueryClaimRecordResponse {
  ClaimRecord claim_record = 1 [
    (gogoproto.moretags) = "yaml:\"claim_record\"",
    (gogoproto.nullable) = false
  ];
}

// QueryClaimRecordRequest is the request type for the Query/ClaimRecord RPC
// method.
message QueryHookRecordRequest {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
}

// QueryClaimRecordResponse is the response type for the Query/ClaimRecord RPC
// method.
message QueryHookRecordResponse {
  HookRecord hook_record = 1 [
    (gogoproto.moretags) = "yaml:\"hook_record\"",
    (gogoproto.nullable) = false
  ];
}

// QueryClaimableForActionRequest is the request type for the
// Query/ClaimableForAction RPC method.
message QueryClaimableForActionRequest {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  Action action = 2 [ (gogoproto.moretags) = "yaml:\"action\"" ];
}

// QueryClaimableForActionResponse is the response type for the
// Query/ClaimableForAction RPC method.
message QueryClaimableForActionResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.moretags) = "yaml:\"coins\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// QueryTotalClaimableRequest is the request type for the Query/TotalClaimable
// RPC method.
message QueryTotalClaimableRequest {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
}

// QueryTotalClaimableResponse is the response type for the Query/TotalClaimable
// RPC method.
message QueryTotalClaimableResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.moretags) = "yaml:\"coins\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
