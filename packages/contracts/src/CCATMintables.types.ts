/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {}
export type ExecuteMsg = {
  add_traits: {
    new_traits: Trait[];
  };
} | {
  remove_traits: {
    ids: number[];
  };
} | {
  add_characters: {
    new_characters: Character[];
  };
} | {
  remove_characters: {
    ids: number[];
  };
} | {
  add_trait_bundles: {
    new_trait_bundles: TraitBundle[];
  };
} | {
  remove_trait_bundles: {
    ids: number[];
  };
} | {
  add_character_bundles: {
    new_character_bundles: CharacterBundle[];
  };
} | {
  remove_character_bundles: {
    ids: number[];
  };
} | {
  add_trait_lootboxes: {
    new_trait_lootboxes: TraitLootbox[];
  };
} | {
  remove_trait_lootboxes: {
    ids: number[];
  };
} | {
  add_character_lootboxes: {
    new_character_lootboxes: CharacterLootbox[];
  };
} | {
  remove_character_lootboxes: {
    ids: number[];
  };
};
export type Uint128 = string;
export interface Trait {
  id: number;
  mint_price: Coin;
  trait_rarity: string;
  trait_type: string;
  trait_value: string;
  [k: string]: unknown;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Character {
  ears?: string | null;
  eyes?: string | null;
  fur_color?: string | null;
  fur_type?: string | null;
  id: number;
  locked: boolean;
  mint_price: Coin;
  mouth?: string | null;
  rarity: string;
  tail_shape?: string | null;
  [k: string]: unknown;
}
export interface TraitBundle {
  id: number;
  mint_price: Coin;
  traits: Trait[];
  [k: string]: unknown;
}
export interface CharacterBundle {
  characters: Character[];
  id: number;
  mint_price: Coin;
  [k: string]: unknown;
}
export interface TraitLootbox {
  id: number;
  mint_price: Coin;
  possibilities: number[];
  traits: Trait[];
  [k: string]: unknown;
}
export interface CharacterLootbox {
  characters: Character[];
  id: number;
  mint_price: Coin;
  possibilities: number[];
  [k: string]: unknown;
}
export type QueryMsg = {
  traits: {};
} | {
  characters: {};
} | {
  trait_bundles: {};
} | {
  character_bundles: {};
} | {
  trait_lootboxes: {};
} | {
  character_lootboxes: {};
};
export interface CharacterBundlesResp {
  bundles: CharacterBundle[];
}
export interface CharacterLootboxesResp {
  lootboxes: CharacterLootbox[];
}
export interface CharactersResp {
  characters: Character[];
}
export interface TraitBundlesResp {
  bundles: TraitBundle[];
}
export interface TraitLootboxesResp {
  lootboxes: TraitLootbox[];
}
export interface TraitsResp {
  traits: Trait[];
}
export type CCATMintablesExecuteMsg = ExecuteMsg;