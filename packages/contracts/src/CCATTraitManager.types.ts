/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Decimal = string;
export type Addr = string;
export type Uint128 = string;
export interface InstantiateMsg {
  collection_params: CollectionParams;
  init_msg: Empty;
  manager_params: TraitManagerParams;
}
export interface CollectionParams {
  code_id: number;
  info: CollectionInfoForRoyaltyInfoResponse;
  name: string;
  symbol?: string | null;
}
export interface CollectionInfoForRoyaltyInfoResponse {
  creator: string;
  description: string;
  explicit_content?: boolean | null;
  external_link?: string | null;
  image?: string | null;
  royalty_info?: RoyaltyInfoResponse | null;
}
export interface RoyaltyInfoResponse {
  payment_address: string;
  share: Decimal;
}
export interface Empty {
  [k: string]: unknown;
}
export interface TraitManagerParams {
  burn_ratio: number;
  destination?: Addr | null;
  mint_prices: Coin[];
  mintable_collection_addr: Addr;
  rarities: string[];
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  mint: {
    token_info: Metadata;
  };
} | {
  mint_to: {
    receiver: string;
    token_info: Metadata;
  };
} | {
  mint_bundle: {
    bundle_id: number;
    receiver?: string | null;
  };
} | {
  open_lootbox: {
    lootbox_id: number;
    receiver?: string | null;
  };
} | {
  update_config: {
    new_config: UpdateTraitManagerParamsMsg;
  };
} | {
  update_ownership: Action;
};
export type Action = {
  transfer_ownership: {
    expiry?: Expiration | null;
    new_owner: string;
  };
} | "accept_ownership" | "renounce_ownership";
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export interface Metadata {
  trait_rarity: string;
  trait_type: string;
  trait_value: string;
}
export interface UpdateTraitManagerParamsMsg {
  burn_ratio: number;
  destination?: Addr | null;
  mint_prices: Coin[];
  rarities: string[];
}
export type QueryMsg = {
  config: {};
} | {
  allowed_collection_code_id: {};
};
export interface AllowedCollectionCodeIdResponse {
  code_id: number;
}
export interface TraitManagerConfigResponseForEmpty {
  collection_address: string;
  config: TraitManagerConfigForEmpty;
}
export interface TraitManagerConfigForEmpty {
  burn_ratio: number;
  collection_code_id: number;
  destination?: Addr | null;
  extension: Empty;
}
export type CCATTraitManagerExecuteMsg = ExecuteMsg;